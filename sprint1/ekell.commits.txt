a4c4866f tmpGameDoubleTest.py (eli-kell     2022-10-10 20:19:11 -0400   7) # Initialize music & sounds
a4c4866f tmpGameDoubleTest.py (eli-kell     2022-10-10 20:19:11 -0400   8) volume = 0.1
a4c4866f tmpGameDoubleTest.py (eli-kell     2022-10-10 20:19:11 -0400   9) pygame.mixer.init()
a4c4866f tmpGameDoubleTest.py (eli-kell     2022-10-10 20:19:11 -0400  10) pygame.mixer.music.load('sounds/music.mp3')
f562fb9b tmpGameDoubleTest.py (eli-kell     2022-10-12 19:36:15 -0400  11) pygame.mixer.music.set_volume(volume/2)
a4c4866f tmpGameDoubleTest.py (eli-kell     2022-10-10 20:19:11 -0400  12) 
a4c4866f tmpGameDoubleTest.py (eli-kell     2022-10-10 20:19:11 -0400  13) clear = pygame.mixer.Sound('sounds/clear.mp3')
a4c4866f tmpGameDoubleTest.py (eli-kell     2022-10-10 20:19:11 -0400  14) tetris = pygame.mixer.Sound('sounds/tetris.mp3')
83ceae0b tmpGameDoubleTest.py (eli-kell     2022-10-11 15:50:54 -0400  15) level_up = pygame.mixer.Sound('sounds/level_up.mp3')
a4c4866f tmpGameDoubleTest.py (eli-kell     2022-10-10 20:19:11 -0400  16) game_over = pygame.mixer.Sound('sounds/game_over.mp3')
a4c4866f tmpGameDoubleTest.py (eli-kell     2022-10-10 20:19:11 -0400  17) 
a4c4866f tmpGameDoubleTest.py (eli-kell     2022-10-10 20:19:11 -0400  18) clear.set_volume(volume)
a4c4866f tmpGameDoubleTest.py (eli-kell     2022-10-10 20:19:11 -0400  19) tetris.set_volume(volume)
83ceae0b tmpGameDoubleTest.py (eli-kell     2022-10-11 15:50:54 -0400  20) level_up.set_volume(volume)
a4c4866f tmpGameDoubleTest.py (eli-kell     2022-10-10 20:19:11 -0400  21) game_over.set_volume(volume)
a4c4866f tmpGameDoubleTest.py (eli-kell     2022-10-10 20:19:11 -0400  22) 
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400  40)       '.....',
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400  51)       '.....',
e1b73fbf tmpGameDoubleTest.py (eli-kell     2022-10-06 19:38:15 -0400  59) I = [['.....',
e1b73fbf tmpGameDoubleTest.py (eli-kell     2022-10-06 19:38:15 -0400  63)       '.....'],
e1b73fbf tmpGameDoubleTest.py (eli-kell     2022-10-06 19:38:15 -0400  64)      ['..0..',
e1b73fbf tmpGameDoubleTest.py (eli-kell     2022-10-06 19:38:15 -0400  65)       '..0..',
e1b73fbf tmpGameDoubleTest.py (eli-kell     2022-10-06 19:38:15 -0400  66)       '..0..',
e1b73fbf tmpGameDoubleTest.py (eli-kell     2022-10-06 19:38:15 -0400  67)       '..0..',
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400  73)       '.....',
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 144) class Piece(object):
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 152) # Opponent Class for keeping track of the Opponent's board
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 163) # locked position given in the format of {(x,y):(255,0,0)}
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 165) def create_grid(locked_pos={}):
2b8b63b8 tmpGameDoubleTest.py (eli-kell     2022-10-10 21:07:59 -0400 263)         pygame.draw.line(surface, (128,128,128), (sx, sy + i*block_size), (sx+play_width-1, sy+ i*block_size))
2b8b63b8 tmpGameDoubleTest.py (eli-kell     2022-10-10 21:07:59 -0400 269)         pygame.draw.line(surface, (128,128,128), (rx, sy + i*block_size), (rx+play_width-1, sy+ i*block_size))
2b8b63b8 tmpGameDoubleTest.py (eli-kell     2022-10-10 21:07:59 -0400 271)             pygame.draw.line(surface, (128, 128, 128), (rx + j*block_size, sy), (rx + j*block_size, sy + play_height))
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 311)                     pygame.draw.rect(surface, queue[k].color, (x + j*block_size, (y + (75 * k)) + i*block_size, block_size, block_size), 0)
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 316) def draw_window(surface, grid, opponent_grid, opponent_name, score, line, level):
2b8b63b8 tmpGameDoubleTest.py (eli-kell     2022-10-10 21:07:59 -0400 320)     label = font.render('Player 1', 1, (255, 255, 255))
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 327)     # display score
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 329)     label = font.render('Score: ' + str(score), 1, (255, 255, 255))
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 331)     sy = top_left_y + play_height / 2 + 250
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 332)     surface.blit(label, (sx, sy))
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 333) 
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 334)     # display line
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 335)     label = font.render('Line: ' + str(line), 1, (255, 255, 255))
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 336)     sy -= 33
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 337)     surface.blit(label, (sx, sy))
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 339)     # display level
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 340)     label = font.render('Level: ' + str(level), 1, (255, 255, 255))
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 341)     sy -= 33
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 342)     surface.blit(label, (sx, sy))
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 349)     pygame.draw.rect(surface, (128, 128, 128), (top_left_x, top_left_y, play_width, play_height), 5)
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 356)     pygame.draw.rect(surface, (128, 128, 128), (opponent_top_left_x, top_left_y, play_width, play_height), 5)
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 361) def main(win):
2b8b63b8 tmpGameDoubleTest.py (eli-kell     2022-10-10 21:07:59 -0400 368)     opponent = Opponent("Player 2", locked_positions)
83ceae0b tmpGameDoubleTest.py (eli-kell     2022-10-11 15:50:54 -0400 376)     fall_speed = 0.75
2b8b63b8 tmpGameDoubleTest.py (eli-kell     2022-10-10 21:07:59 -0400 377)     level_count = 0
83ceae0b tmpGameDoubleTest.py (eli-kell     2022-10-11 15:50:54 -0400 379)     leveled = False
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 381)     level = 0
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 382)     line = 0
a4c4866f tmpGameDoubleTest.py (eli-kell     2022-10-10 20:19:11 -0400 384)     pygame.mixer.music.play(-1)
a4c4866f tmpGameDoubleTest.py (eli-kell     2022-10-10 20:19:11 -0400 385) 
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 454)             # update lines cleared
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 455)             cleared = clear_rows(grid, locked_positions)
2b8b63b8 tmpGameDoubleTest.py (eli-kell     2022-10-10 21:07:59 -0400 456)             level_count += cleared
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 457)             line += cleared
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 458) 
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 459)             # update level & speed
2b8b63b8 tmpGameDoubleTest.py (eli-kell     2022-10-10 21:07:59 -0400 460)             if cleared > 0 and level_count >= 10:
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 461)                 level += 1
83ceae0b tmpGameDoubleTest.py (eli-kell     2022-10-11 15:50:54 -0400 462)                 leveled = True
2b8b63b8 tmpGameDoubleTest.py (eli-kell     2022-10-10 21:07:59 -0400 463)                 level_count -= 10
83ceae0b tmpGameDoubleTest.py (eli-kell     2022-10-11 15:50:54 -0400 464)                 fall_speed -= 0.025
83ceae0b tmpGameDoubleTest.py (eli-kell     2022-10-11 15:50:54 -0400 465)                 pygame.mixer.Sound.play(level_up)
f562fb9b tmpGameDoubleTest.py (eli-kell     2022-10-12 19:36:15 -0400 466)                 if fall_speed < 0.1: fall_speed = 0.1
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 467) 
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 468)             # update score
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 469)             if cleared == 1:
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 470)                 score += 40 * (level + 1)
f562fb9b tmpGameDoubleTest.py (eli-kell     2022-10-12 19:36:15 -0400 471)                 if not leveled: pygame.mixer.Sound.play(clear)
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 472)             if cleared == 2:
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 473)                 score += 100 * (level + 1)
f562fb9b tmpGameDoubleTest.py (eli-kell     2022-10-12 19:36:15 -0400 474)                 if not leveled: pygame.mixer.Sound.play(clear)
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 475)             if cleared == 3:
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 476)                 score += 300 * (level + 1)
f562fb9b tmpGameDoubleTest.py (eli-kell     2022-10-12 19:36:15 -0400 477)                 if not leveled: pygame.mixer.Sound.play(clear)
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 478)             if cleared == 4:
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 479)                 score += 1200 * (level + 1)
f562fb9b tmpGameDoubleTest.py (eli-kell     2022-10-12 19:36:15 -0400 480)                 if not leveled: pygame.mixer.Sound.play(tetris)
83ceae0b tmpGameDoubleTest.py (eli-kell     2022-10-11 15:50:54 -0400 481) 
f562fb9b tmpGameDoubleTest.py (eli-kell     2022-10-12 19:36:15 -0400 482)             leveled = False
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 483) 
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 484)         draw_window(win, grid, opponent_grid, opponent.name, score, line, level)
a4c4866f tmpGameDoubleTest.py (eli-kell     2022-10-10 20:19:11 -0400 490)             pygame.mixer.Sound.play(game_over)
a4c4866f tmpGameDoubleTest.py (eli-kell     2022-10-10 20:19:11 -0400 491)             pygame.mixer.music.stop()
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 498) # Add text-boxes for custom settings (DAS, ARR)
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 503) def main_menu(win):
e70d6b38 tmpGameDoubleTest.py (eli-kell     2022-10-10 16:50:38 -0400 519) pygame.display.set_caption('PyTris')

a6dd5231 (eli-kell 2022-10-11 11:40:55 -0400  1) Copyright (c) 2022 PyTris
a6dd5231 (eli-kell 2022-10-11 11:40:55 -0400  2) 
a6dd5231 (eli-kell 2022-10-11 11:40:55 -0400  3) Permission is hereby granted, free of charge, to any person obtaining a copy
a6dd5231 (eli-kell 2022-10-11 11:40:55 -0400  4) of this software and associated documentation files (the "Software"), to deal
a6dd5231 (eli-kell 2022-10-11 11:40:55 -0400  5) in the Software without restriction, including without limitation the rights
a6dd5231 (eli-kell 2022-10-11 11:40:55 -0400  6) to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
a6dd5231 (eli-kell 2022-10-11 11:40:55 -0400  7) copies of the Software, and to permit persons to whom the Software is
a6dd5231 (eli-kell 2022-10-11 11:40:55 -0400  8) furnished to do so, subject to the following conditions:
a6dd5231 (eli-kell 2022-10-11 11:40:55 -0400  9) 
a6dd5231 (eli-kell 2022-10-11 11:40:55 -0400 10) The above copyright notice and this permission notice shall be included in all
a6dd5231 (eli-kell 2022-10-11 11:40:55 -0400 11) copies or substantial portions of the Software.
a6dd5231 (eli-kell 2022-10-11 11:40:55 -0400 12) 
a6dd5231 (eli-kell 2022-10-11 11:40:55 -0400 13) THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
a6dd5231 (eli-kell 2022-10-11 11:40:55 -0400 14) IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
a6dd5231 (eli-kell 2022-10-11 11:40:55 -0400 15) FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
a6dd5231 (eli-kell 2022-10-11 11:40:55 -0400 16) AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
a6dd5231 (eli-kell 2022-10-11 11:40:55 -0400 17) LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
a6dd5231 (eli-kell 2022-10-11 11:40:55 -0400 18) OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
a6dd5231 (eli-kell 2022-10-11 11:40:55 -0400 19) SOFTWARE.
